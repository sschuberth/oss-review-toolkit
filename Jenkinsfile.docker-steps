/*
 * Copyright (C) 2019 Bosch Software Innovations GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * License-Filename: LICENSE
 */

final DOCKER_BUILD_ARGS = '--build-arg http_proxy=$http_proxy --build-arg https_proxy=$https_proxy'
final DOCKER_RUN_ARGS = '-e http_proxy -e https_proxy -v /tmp:/tmp -v $PWD:/home/ort -w /home/ort'

pipeline {
    agent none

    parameters {
        string(
            name: 'VCS_URL',
            description: 'VCS clone URL of the project',
            defaultValue: 'https://github.com/vdurmont/semver4j.git'
        )

        string(
            name: 'VCS_BRANCH',
            description: 'VCS branch of the project',
            defaultValue: 'master'
        )

        choice(
            name: 'LOG_LEVEL',
            description: 'Log message level',
            choices: ['--info', '--debug', '']
        )
    }

    stages {
        stage('Clone project') {
            agent any

            steps {
                sh 'rm -fr project'

                // See https://jenkins.io/doc/pipeline/steps/git/.
                checkout([$class: 'GitSCM',
                    userRemoteConfigs: [[url: params.VCS_URL]],
                    branches: [[name: "*/${params.VCS_BRANCH}"]],
                    extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'project/source']]
                ])
            }
        }

        stage('Build ORT distribution') {
            agent {
                dockerfile {
                    dir 'docker/build'
                    additionalBuildArgs DOCKER_BUILD_ARGS
                    args DOCKER_RUN_ARGS
                }
            }

            steps {
                sh '''
                    . docker/lib
                    parseProxyEnvToJavaProps
                    ./gradlew $HTTP_PROXY_PROPERTIES $HTTPS_PROXY_PROPERTIES --no-daemon --stacktrace :cli:installDist :cli:distTar
                '''
            }
        }

        stage('Run ORT analyzer') {
            agent {
                dockerfile {
                    dir 'docker/run'
                    additionalBuildArgs DOCKER_BUILD_ARGS
                    args DOCKER_RUN_ARGS
                }
            }

            steps {
                sh '''
                    /cli/build/install/ort/bin/ort --help
                '''
            }
        }
    }
}
